input {

  beats {
    port => 5044
  }
}

filter {
  mutate {
    split => ["[log][file][path]", "/"]
    add_field => { "job_name" => "%{[log][file][path][5]}" }
    add_field => { "build_num" => "%{[log][file][path][7]}" }
  }

  grok {
    match => {"message" => ["(?m)TASK \[(?<task_name>.*?)\].*DFG-(?<DFG>\w+).*-(?<osp_release>[1-2]\d(\.\d)?)(_|-).*(expception|The error was: )(?<build_failure>.*)NO", "(?m)TASK \[(?<task_name>.*?)\].*(expception|The error was: )(?<build_failure>.*)NO", "TASK \[(?<task_name>.*?)\].*DFG-(?<DFG>\w+).*-(?<osp_release>[1-2]\d(\.\d)?)(_|-).*", "TASK \[(?<task_name>.*?)\].*-(?<osp_release>[1-2]\d(\.\d)?)(_|-).*", "[Ee]rror:(?<build_failure>.*)", "Started by (?<build_trigger>\b\w+\b)|Finished: (?<build_result>\b\w+\b)", "TASK \[(?<task_name>.*?)\]", "infrared.*topology-nodes (?<topology>(\b\w+\b:\d,)+\b\w+\b:\d).*host-address (?<node_name>(\b\w+\b\.)+\b\w+\b).*(?<guest_image>rhel-.*).qcow2"]}
  }
}

## Add your filters / logstash plugins configuration here

output {
  stdout {
    codec=> rubydebug
  }
  elasticsearch {
    hosts => "elasticsearch:9200"
  }
}
